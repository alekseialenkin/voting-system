drop table if exists user_role;
drop table if exists VOTE;
drop table if exists dish;
drop table if exists restaurant;
drop table if exists users;
drop sequence if exists global_seq;

create sequence global_seq start with 100000;

create table users
(
    name     varchar(256)                                        not null,
    password varchar(256)                                        not null,
    id       integer GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ not null
        constraint user_pk
            primary key,
    email    varchar(256)                                        not null
);

create table user_role
(
    user_id integer      not null,
    role    varchar(256) not null,
    constraint user_roles_idx unique (user_id, role),
    foreign key (user_id) references users (id) on delete cascade
);

create table RESTAURANT
(
    ID   INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ
        constraint RESTAURANT_PK
            primary key,
    NAME VARCHAR(256) not null
);

create table DISH
(
    NAME          VARCHAR(256) not null,
    PRICE         INTEGER      not null,
    ID            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ
        constraint DISH_PK
            primary key,
    RESTAURANT_ID INTEGER
        constraint DISH_RESTAURANT_FK
            references RESTAURANT
            on delete cascade
);

create table VOTE
(
    ID            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ
        constraint VOTE_PK
            primary key,
    USER_ID       INTEGER
        constraint USER_FK
            references USERS
            on delete cascade,
    RESTAURANT_ID INTEGER
        constraint RESTAURANT_FK
            references RESTAURANT
            on delete cascade,
    VOTED         TIMESTAMP default now() not null
);
CREATE UNIQUE INDEX vote_unique_user_restaurant_idx
    ON Vote (USER_ID, RESTAURANT_ID);





